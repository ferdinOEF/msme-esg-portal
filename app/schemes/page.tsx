export const dynamic = 'force-dynamic';
import { prisma } from '@/lib/db'
export default async function SchemesPage(){const schemes=await prisma.scheme.findMany({include:{linksFrom:true,linksTo:true},orderBy:{name:'asc'}});return(<div className='space-y-4'><h1 className='text-2xl font-semibold'>Schemes & Certifications</h1><div className='grid md:grid-cols-2 lg:grid-cols-3 gap-4'>{schemes.map(s=>(<div key={s.id} className='card'><div className='text-lg font-semibold'>{s.name}</div><div className='text-sm text-slate-600'>{s.authority}</div><div className='mt-2'><div className="text-xs mb-1">Pillars: {s.pillar}</div>
<p className='text-sm'>{s.description}</p>{s.benefits&&<p className='text-sm mt-2'><b>Benefits:</b> {s.benefits}</p>}{s.eligibility&&<p className='text-sm'><b>Eligibility:</b> {s.eligibility}</p>}{s.documentsUrl&&<a className='link text-sm' href={s.documentsUrl} target='_blank'>Documents</a>}</div>{s.linksFrom.length>0&&(<div className='mt-3 text-sm'><div className='font-medium'>Relations</div><ul className='list-disc ml-5'>{s.linksFrom.map(l=>(<li key={l.id}><b>{l.relation}</b> â†’ {schemes.find(x=>x.id===l.toId)?.shortCode||schemes.find(x=>x.id===l.toId)?.name}</li>))}</ul></div>)}</div>))}</div></div>)}
